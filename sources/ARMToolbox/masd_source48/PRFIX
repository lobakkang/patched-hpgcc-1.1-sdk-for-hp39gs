HPHP49-C,*pÈ::

*****************************************************
* StrFix: FIXES ARM CODE
*         FOR TEMPOB/USEROB ONLY
*         By Claudio Lapilli
*****************************************************

CK1


CODE

  SAVE
  A=DAT1.A
  D0=A
  
  % FIND TYPE OF LAUNCH
  A=DAT0.A
  C=0.A
  R2=C.A      % R2=SWITCH ROUTINE
  B=0.S
  B=B-2.S     % DEFAULT TO MAIN RAM
  D=0.S       % TYPE=STRING
  LC(5) DOLIST
  ?C=A.A
  GOYES IDLAUNCH
  LC(5) DOIDNT
  ?C#A.A
  GOYES NOID1
  GOTO IDLAUNCH2
*NOID1
  D=D+1.S    % TYPE=BACKUP
  LC(5) DOTAG
  ?C=A.A
  GOYES IDLAUNCH
  AD1EX
  D1=(5) ROMPARTS
  C=DAT1.A 
  AD1EX
  AD0EX
  D0=A 
  ?C>A.A
  GOYES NOTEMBEDDED
  LC(5) $1130C
  GOVLNG GPErrjmpC
*NOTEMBEDDED

  D=0.S      % TYPE=STRING
  GOTO STRINGLAUNCH
  
*IDNOTFOUND
  P=0
  LC(5) $11308
  GOVLNG GPErrjmpC
*IDLAUNCH
  CD0EX
  D0=C
  D1=C
  GOSBVL RclAssembly
  GOC IDNOTFOUND
*DONERCL
  C=D.A
  R2=C.A
  CD0EX
  D0=C
  P=C.4
  ?P=0
  GOYES IDNOTFOUND
  P=0
  C=R2.A
  GOTO OKTOFIX
  
*IDLAUNCH2
  CD0EX
  D1=C
  D1+5   % POINT AFTER DOIDNT
  D0=(5) CONTEXT
  A=DAT0.A
*DIRLOOP
  B=A.A
  D=0.A
  GOSBVL FindInDir
  GONC DONERCL
  A=B.A
  GOSBVL GETRRP
  GONC DIRLOOP
  GOTO IDNOTFOUND
  
*OKTOFIX
  ?D=0.S
  GOYES STRINGLAUNCH
  
  CD0EX
  D0=C
  D1=C
  D1-2
  A=0.A
  A=DAT1.B
  A=A+1.A
  A=A+A.A
  CD1EX
  C=C-A.A
  C=C-10.A  % POINT TO PROLOG OF DOBAK
  R1=C.A
    
  % CHECK IF VALID ARM PROGRAM
*STRINGLAUNCH
% D0->PROLOG OF STRING
% D.S=ISBACKUP?
% R1.A->PROLOG OF BACKUP IF D.S=1

  A=DAT0.A
  LC(5) DOEXT0
  ?C=A.A
  GOYES ISLIBDATA
  LC(5) DOCODE
  ?C=A.A
  GOYES ISLIBDATA
  LC(5) DOHXS
  ?C=A.A
  GOYES ISLIBDATA
  LC(5) DOCSTR
  ?C=A.A
  GOYES ISLIBDATA
*INVALIDPROG  
  LC(5) $11304
  GOVLNG GPErrjmpC

*ISLIBDATA

% *********************************************
% ALIGN THE CODE IF IT IS AN ARM PROGRAM
% *********************************************

*ALIGNOBJECT

% ENTRY: D0=PROLOG OF OBJ
%        D.S=ISBACKUP?
%        R1.A->PROLOG OF BACKUP IF D.S=1
% USES: ALL BUT D1, R3 AND R4

 D0+10
 C=DAT0.A   % READ HEADER
 LA(5) $0B34C
 ?C=A.A     % IF STARTS WITH \\\\\\\"L\\\\179\\\\\\\" IS VALID
 GOYES VALIDPRG     % NOT AN ARM V3 PROGRAM
 LC(5) $11304
 GOVLNG GPErrjmpC
*VALIDPRG
 D0-5       % POINT TO OBJECT SIZE
 C=DAT0.A   % READ SIZE OF LIBDATA OBJECT
 C=C-5.A
 C=C-14.A   % C=SIZE OF ARM PROGRAM
 R0=C.A     % R0=SIZE
 D0+10      % SKIP SIZE AND MARKER
 C=0.A
 C=DAT0.1   % READ OFFSET TO ARM CODE
 AD0EX
 D0=A
 A=A+1.A    % SKIP OFFSET
 ACEX.A
 D=C.A      % D=SAVED SCRATCH AREA
 A=A+C.A    % A=ACTUAL START OF ARM CODE
 R3=A.A     % R4=SAVED ACTUAL ADDR

 C=A.A
 A=A+A.P
 ?A#0.P     % CHECK IF ADDRESS IS WORD ALIGNED
 GOYES MISALIGNED
 GOTO ISALIGNED2
*MISALIGNED
% CODE WAS MISALIGNED, FIX IT
 C=D.A
 C=C+7.A
 LA(1) 8
 C=C&A.P    % C=NEW ALIGNED ADDRESS
 A=C.A     % A=SAVED NEW ADDR
 C=C-D.A    % C=OFFSET OF THE RELOCATED CODE
 DAT0=C.P
 
 C=R3.A     % C=ORG ADDR
 R3=A.A     % SAVE NEW ADDRESS AS ACTUAL
 ?A<C.A
 GOYES DOMDOWN  % DECIDE IF COPY UP OR DOWN

 CR0EX.A     % C=SIZE OF CODE
 A=A+C.A    % POINT TO END OF BLOCK
 AD1EX      % D1=DEST
 B=A.A      % B=SAVED D1
 A=C.A
 CR0EX.A
 C=C+A.A    % POINT TO END OF BLOCK
 CD0EX    % D0=SOURCE
 C=R0.A
 MOVEUP
 GOTO ISALIGNED

*DOMDOWN
 AD1EX       % D1=DEST
 B=A.A       % SAVE D1
 CD0EX    % D0=SOURCE
 C=R0.A     % C=SIZE
 MOVEDN

*ISALIGNED
 
 C=B.A
 D1=C       % RESTORE SAVED D1 

*ISALIGNED2

  
*DONEFIX
  ?D=0.S
  GOYES  NOCRCFIX
  A=R1.A  % ORIGINAL BACKUP OBJ ADDR
  D0=A
  D0+5     % POINT TO SIZE
  A=DAT0.A
  A=A-4.A
  GOSBVL DoCRC
  DAT0=A.4

*NOCRCFIX
  LOADRPL

ENDCODE

;
@