HPHP49-C,*¥::

*****************************************************
* StrFix: FIXES ARM CODE
*         FOR TEMPOB/USEROB ONLY
*         By Claudio Lapilli
*****************************************************

CK1

DUPTYPECSTR? NcaseTYPEERR

CODE
 SAVE
 A=DAT1.A
 D1=A
% *********************************************
% ALIGN THE CODE IF IT IS AN ARM PROGRAM
% *********************************************

*ALIGNOBJECT

% ENTRY: D1=PROLOG OF OBJ
%        R3=ABSOLUTE ADDRESS OF LIBRARY (W/O PROLOG)
%        R4=ACTUAL ADDRESS OF LIBRARY (W/O PROLOG)
% USES: ALL BUT B, D0, R3 AND R4

 D1+10
 C=DAT1.A   % READ HEADER
 LA(5) $0B34C
 ?C=A.A     % IF STARTS WITH \\\\\\\"L\\\\179\\\\\\\" IS VALID
 GOYES VALIDPRG     % NOT AN ARM V3 PROGRAM
 LC(5) $11304
 GOVLNG GPErrjmpC
*VALIDPRG
 D1-5       % POINT TO OBJECT SIZE
 C=DAT1.A   % READ SIZE OF LIBDATA OBJECT
 C=C-5.A
 C=C-14.A   % C=SIZE OF ARM PROGRAM
 R0=C.A     % R0=SIZE
 D1+10      % SKIP SIZE AND MARKER
 C=0.A
 C=DAT1.1   % READ OFFSET TO ARM CODE
 AD1EX
 D1=A
 A=A+1.A    % SKIP OFFSET
 ACEX.A
 D=C.A      % D=SAVED SCRATCH AREA
 A=A+C.A    % A=ACTUAL START OF ARM CODE
 R1=A.A     % R1=SAVED ACTUAL ADDR

 C=A.A
 A=A+A.P
 ?A#0.P     % CHECK IF ADDRESS IS WORD ALIGNED
 GOYES MISALIGNED
 GOTO ISALIGNED2
*MISALIGNED
% CODE WAS MISALIGNED, FIX IT
 C=D.A
 C=C+7.A
 LA(1) 8
 C=C&A.P    % C=NEW ALIGNED ADDRESS
 R2=C.A     % R2=SAVED NEW ADDR
 C=C-D.A    % C=OFFSET OF THE RELOCATED CODE
 DAT1=C.P
 A=R2.A     % A=NEW ADDR
 C=R1.A     % C=ORG ADDR
 R1=A.A     % SAVE NEW ADDRESS AS ACTUAL
 ?A<C.A
 GOYES DOMDOWN  % DECIDE IF COPY UP OR DOWN

 CR0EX.A     % C=SIZE OF CODE
 A=A+C.A    % POINT TO END OF BLOCK
 D1=A       % D1=DEST
 A=C.A
 CR0EX.A
 C=C+A.A    % POINT TO END OF BLOCK
 CD0EX    % D0=SOURCE
 R2=C.A     % R2=SAVED D0
 C=R0.A
 GOSBVL MOVEUP
 GOTO ISALIGNED

*DOMDOWN
 D1=A       % D1=DEST
 CD0EX    % D0=SOURCE
 R2=C.A     % R2=SAVED D0
 C=R0.A     % C=SIZE
 GOSBVL MOVEDOWN

*ISALIGNED
 
 C=R2.A
 D0=C       % RESTORE SAVED D0 

*ISALIGNED2

 % ************************************************************
 % FIX RELOCATION TABLES HERE
 % ************************************************************
 
 % ENTRY:
 % R0=SIZE OF ARM CODE
 % R1=ACTUAL START OF CODE

 % MUST PRESERVE D0, B, R3, R4


  A=R1.A
  C=R0.A
  A=A+C.A     % POINT TO END OF CODE
  A=A-8.A     % POINT TO STRUCTURE MARKER
  D1=A
  
  A=0.W
  C=0.W
  A=DAT1.8
  LC(8) $3176B34C
  
  ?A=C.W
  GOYES DOFIXTBL
  GOVLNG GETPTRLOOP  

*DOFIXTBL
  A=0.W
  A=R1.A
  
  ASRB.A      % SAT/2
  P=6
  LA(1) 8
  P=0

*DOADDR

  D1-8
  C=0.W
  C=DAT1.8    % PRIMARY OFFSET
  R1=A.W      % R1=NEW ARM ADDR
  R2=C.W      % KEEP ORIGINAL FOR CALCULATIONS
  DAT1=A.8    % STORE THE ARM ABS ADDRESS
  
  D1-8        % POINT TO PR.ENTRY PT
  A=DAT1.8
  A=A-C.W     % OFFSET 
  C=R1.W
  A=A+C.W     % NEW ADDR
  DAT1=A.8

  D1-16       % POINT TO NUMBER OF ENTRY POINTS

  C=DAT1.A
  D=C.A       % COUNTER
  D1-8

*ENTRYPTLOOP
  ?D#0.A
  GOYES MOREEPT
  GOVLNG GETPTRLOOP
*MOREEPT
  A=DAT1.8    % READ OLD ADDRESS
  C=R2.W      % ORIGINAL ADDR
  A=A-C.W     % CALCULATE OFFSET

  C=R1.W      % NEW ADDR
  A=A+C.W
  DAT1=A.8    % WRITE NEW ARM ADDRESS

  D1-16
  D=D-1.A
  GOTO ENTRYPTLOOP



ENDCODE

;
@